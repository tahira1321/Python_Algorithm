'''
10000までのフィボナッチ数列を出力するプログラムを作成せよ。
'''

'''step0:構造・動作を考える
フィボナッチ数列とは？
最初の2項が1で、それ以降の各項が直前の2つの項の和となる数列
例：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144...

フィボナッチ数列の変数は"fib"、初期値は"0"にする
fib = 0
繰り返しの範囲は1-10000
for i in range(1, 10001):
fib にiを加算していく
fib += i
fib に加算する条件が必要
フィボナッチ数列に該当する数字のみ加算
→範囲内の数字がフィボナッチ数列に該当するか判定が必要


'''

# step1:適当な数列を表示する
for i in range(1, 10):
  print(i, end=" ")
print()
'''
実行結果
1 2 3 4 5 6 7 8 9 
'''

# step2:変数に数字を加算していく
fib = 0
for i in range(1, 10):
  fib += i
  print(fib, end=" ")
print()
'''
実行結果
1 3 6 10 15 21 28 36 45
フィボナッチ数列ではないけど、加算した数字が順番に表示された

「範囲を指定するループ:i」と「数字を判定するループ:j」で2重ループにする


'''

# step3:2重ループにする
fib = 0
for i in range(1, 10):
  for j in range(1, i+1):
    fib += i
    print(fib, end=" ")
print()
'''
実行結果
1 3 5 8 11 14 18 22 26 30 35 40 45 50 55 61 67 73 79 85 91 98 105 112 119 126 133 140 148 156 164 172 180 188 196 204 213 222 231 240 249 258 267 276 285 
意図しない数字がたくさん出てきた
fib += i  この記述のせいかな
'''
fib = 0
limit = 10
for i in range(1, limit):              # 範囲を0から開始にした
  for j in range(i):                # jの範囲を変更
    fib += j
    print(fib, end=" ")
print()
'''
実行結果
0 0 1 1 2 4 4 5 7 10 10 11 13 16 20 20 21 23 26 30 35 35 36 38 41 45 50 56 56 57 59 62 66 71 77 84 84 85 87 90 94 99 105 112 120 120 121 123 126 130 135 141 148 156 165 
これもフィボナッチ数列じゃないけど、最初の数文字はフィボナッチぽくなった
いくつかの数字がにど表示されている。条件を指定すれば改善できるか？

jいる？
'''
print()
fib = 0
limit = 10
for i in range(limit):
  if i <= 1:
    print(i)
    break
  else:
    fib += i
  print(fib, end=" ")
print()


'''
もうわかりません
ギブアップです
'''
a = 0
b = 1
while a < 10000:
    print(a, end=' ')
    tmp = a
    a = b
    b = tmp + b
print()
'''
これってもしかして再起関数でも表現できる？
'''
# def fibonacci(n):
