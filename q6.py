'''
10以下の素数の和は 2 + 3 + 5 + 7 = 17 である。20,000以下の全ての素数の和を求めよ
※「21171191」と出力されればOK。
'''

''' step0:素数を考える
定義：1とその数字以外には約数がない2以上の正の整数
  例） 6 -> 1, 2, 3, 6
      10 -> 1, 2, 5
      23 -> 1, 23

約数の判定
  訳数を判定する数字の範囲は、判定したい数字の2から1/2（奇数の場合は小数点切り捨てした数字）まで
  例） 6 -> 2～3まで
      99 -> 2～45まで

判定する数字の範囲内で、割り切れる（余りが0）数字が「ある」場合は素数じゃない
判定する数字の範囲内で、割り切れる（余りが0）数字が「ない」場合は素数
      
'''

# step1:2から入力された数字までを表示
a = int(input("2以上の正の整数を入力：")) # 使いまわす
if a < 2:
  print("入力された数字は適切ではありません。")
for i in range(2, a + 1):
  print(i, end=" ")
print()
print("-" * 20 + "改行") # 改行用区切り線
'''出力結果
a = 10 の時
2 3 4 5 6 7 8 9 10 
'''


# step2:約数を判定する数字を表示させる
for i in range(2, a + 1):
  print("iが{}の時".format(i))
  half = i // 2 # 約数を判定する最大値iの1/2の数字を変数に代入
  for j in range(2, half + 1):
    print("jは{}".format(j), end=" ")
    print()
  print("-" * 5) # 改行用区切り線
print("-" * 20 + "改行") # 改行用区切り線
'''出力結果
iが2の時
-----
iが3の時
-----
iが4の時
jは2 
-----
iが5の時
jは2 
-----
iが6の時
jは2 
jは3 
-----
iが7の時
jは2 
jは3 
-----
iが8の時
jは2 
jは3 
jは4 
-----
iが9の時
jは2 
jは3 
jは4 
-----
iが10の時
jは2 
jは3 
jは4 
jは5 
-----
'''


# step3:ループjの判定式を追記する※余りの有無を判定
for i in range(2, a + 1):
  print("iが{}の時".format(i))
  half = i // 2 # 約数を判定する最大値iの1/2の数字を変数に代入
  for j in range(2, half + 1):
    if i % j == 0:
      print("{}は素数じゃない".format(i))
    else:
      print("{}は素数".format(i))
      print("-" * 5) # 改行用区切り線
print("-" * 20 + "改行") # 改行用区切り線
'''実行結果
a = 10 の時
iが2の時
iが3の時
iが4の時
4は素数じゃない
iが5の時
5は素数
-----
iが6の時
6は素数じゃない
6は素数じゃない

最後に「6は素数じゃない」が2回出てきている
約数が複数ある場合は、8や9でも割り切れるときは「素数」と出力される

'''

# step4:ループjで素数じゃないと判断した時点でループを終了させる
for i in range(2, a + 1):
  print("iが{}の時".format(i))
  half = i // 2 # 約数を判定する最大値iの1/2の数字を変数に代入
  for j in range(2, half + 1):
    if i % j == 0:
      print("{}は素数じゃない".format(i))
      break # breakを追加
    else:
      print("{}は素数".format(i))
      print("-" * 5) # 改行用区切り線
print("-" * 20 + "改行") # 改行用区切り線

'''実行結果

iが2の時........※
iが3の時........※
iが4の時
4は素数じゃない
iが5の時
5は素数
-----
iが6の時
6は素数じゃない
--------------------
「6は素数じゃない」の表示が1回になった
※しかし、iが2と3のときに素数と判定されていない

'''

# step5:素数の挿話を出す※素数の変数を用意し初期値に0を代入する
num = 10
prime_number = 0 # 素数を表す変数
for i in range(2, num + 1):
  half = i // 2
  for j in range(2, half + 1):
    if i % j == 0: # 2からhalf+1までの間のスープが全て終わってから判定したい
      print("{}は素数じゃない".format(i))
      break
  else: #ifと同じ高さじゃなくていいの？？ ifと同じ高さだと1巡ごとに判定されてしまう
    print("{}は素数".format(i))
    prime_number += i
print(prime_number)
print("-" * 20 + "改行") # 改行用区切り線
'''
else: のインデントの位置が違うだけで答えが全く変わってくる
➀for i in range(2, num + 1): と同じ高さ = iのループの外側
  →iの最大値が出力される

②for j in range(2, half + 1): と同じ高さ = iのループの内側 & jのループの外側
  →正答
  この高さのインデントにより、ループjが全て終わってから判定される→一つの数字に結果は1つだけ返される

③if と同じ高さ = jのループの内側
  →回答[28]と表示される
    4は素数じゃない
    5は素数
    6は素数じゃない
    7は素数
    7は素数
    8は素数じゃない
    9は素数
    9は素数じゃない
    10は素数じゃない
    28 = 5+7+7+9
  ループjが1周するごとに毎回判定されていたため、一つの数字で複数の結果「素数」「素数じゃない」がでていた

'''